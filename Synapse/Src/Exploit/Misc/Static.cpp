#include "Static.hpp"

#pragma warning(disable : 4191)
namespace syn
{
	void Static::Initialize()
	{
		EnterCriticalSection(&InitSection);

		ProcID = GetCurrentProcessId();

		ntdll = syn::FindModule(OBFUSCATE_STR("ntdll.dll"));
		kernel32 = syn::FindModule(OBFUSCATE_STR("kernel32.dll"));
		kernelbase = syn::FindModule(OBFUSCATE_STR("kernelbase.dll"));

		SafeVirtualProtect = (VirtualProtectFn)syn::FindProcAddress(syn::kernelbase, OBFUSCATE_STR("VirtualProtect"));

		RobloxProcess = GetCurrentProcess();
		RobloxModule = GetModuleHandleA(NULL);

		LeaveCriticalSection(&InitSection);
	}

	struct HandleData 
	{
		unsigned long ProcID;
		HWND Handle;
	};

	BOOL CALLBACK EnumWindowsCallback(HWND handle, LPARAM lParam)
	{
		HandleData& data = *(HandleData*)lParam;
		unsigned long process_id = 0;
		GetWindowThreadProcessId(handle, &process_id);

		char WindowName[255];
		GetWindowTextA(handle, WindowName, sizeof(WindowName));
		
		if (data.ProcID != process_id || strcmp(WindowName, OBFUSCATE_STR("Roblox")) != 0)
			return TRUE;

		data.Handle = handle;
		return FALSE;
	}

	HWND FindMainWindow(unsigned long process_id)
	{
		HandleData data{};
		data.ProcID = process_id;
		data.Handle = nullptr;

		EnumWindows(EnumWindowsCallback, (LPARAM)&data);
		return data.Handle;
	}

	void Static::InitializeWindow()
	{
		RobloxWindow = FindMainWindow(GetCurrentProcessId());
	}
}
